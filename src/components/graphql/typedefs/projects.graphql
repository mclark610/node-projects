scalar DateTime
scalar Decimal
scalar Text

union ProjectResults = Project | ErrorResults | IDResults

""" 
Projects 
"""
type Project {
  id: Int!
  part_id: Int
  status: Int
  complete: Int
  createdAt: DateTime
  updatedAt: DateTime
  part: Part
  parts: [Part]
  tasks: [Task]
  notes: [Note]
}

type CreateProjectResults {
  id: Int!
  part_id: Int
}

type MutationResults {
  id: Int
}

type Query {
  projects: [Project]
  project(id: Int!) : ProjectResults
}

type Mutation {
  createProject(projectName: String!,projectDescription: Text,projectPartNumber: String,projectStatus: Int,projectPrice:Decimal,projectVendor:String,projectImageFile:String,projectNoteFile:String): CreateProjectResults
  updateProject(projectID: Int,partID: Int, projectName: String,projectDescription: Text,projectComplete: Int,projectPartNumber: String ,projectStatus: Int,projectPrice: Decimal,projectVendor: String,projectImageFilename: String,projectDocFilename: String):MutationResults
  updateProjectStatus(projectID: Int, projectStatus: Int): MutationResults
  updateProjectComplete(projectID:Int, projectComplete: Int):MutationResults
  deleteProject(projectID: Int): MutationResults
}