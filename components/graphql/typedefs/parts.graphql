scalar DateTime
scalar Decimal
scalar Text

type Part {
  id: Int!
  name: String
  part_nbr: String
  price: Decimal
  description: Text
  vendor: String
  image_filename: String
  doc_filename: String
  status: Int
  complete: Int
  createdAt: DateTime
  updatedAt: DateTime
}

type CreatePart {
  part_id: Int
}
type MutationPart {
  id: Int
}

type Query {
  parts : [Part]
  part(id:Int!) : PartResults
}

type Mutation {
  createPart(projectID: Int, partName: String!,partDescription: Text,partNumber: String,partStatus: Int,partPrice:Decimal,partVendor:String,partImageFile:String,partNoteFile:String): CreatePart
  createDocForPart(partID: Int!, docFilename: String!): MutationPart
  createImageForPart(partID: Int!, imageFilename: String!): MutationPart
  updatePart(partID: Int, partName: String!,partDescription: Text,partNumber: String,partStatus:Int,partPrice:Decimal,partVendor:String,partImageFilename:String,partDocFilename:String): MutationPart
  updatePartStatus(partID: Int,partStatus: Int): MutationPart
}